{"ast":null,"code":"import axios from \"axios\"; // we need to fetch ALL recipes --outlined\n// fetch one recipe --outlined\n// we need to fetch recipes specific to a chef --outlined\n// we need to post a new recipe to database --outlined\n// update a recipe --outlined\n// delete a recipe\n//actions for all recipes\n\nexport const FETCH_RECIPES_START = \"FETCH_RECIPES_START\";\nexport const FETCH_RECIPES_SUCCESS = \"FETCH_RECIPES_SUCCESS\";\nexport const FETCH_RECIPES_FAILURE = \"FETCH_RECIPES_FAILURE\"; //actions for fetching one recipe\n\nexport const FETCH_A_RECIPE_START = \"FETCH_A_RECIPE_START\";\nexport const FETCH_A_RECIPE_SUCCESS = \"FETCH_A_RECIPE_SUCCESS\";\nexport const FETCH_A_RECIPE_FAILURE = \"FETCH_A_RECIPE_FAILURE\"; //actions for fetching ONE chef's recipes\n\nexport const FETCH_CHEF_RECIPES_START = \"FETCH_CHEF_RECIPES_START\";\nexport const FETCH_CHEF_RECIPES_SUCCESS = \"FETCH_CHEF_RECIPES_SUCCESS\";\nexport const FETCH_CHEF_RECIPES_FAILURE = \"FETCH_CHEF_RECIPES_FAILURE\"; //action for posting a new recipe\n//export const ADD_RECIPE = \"ADD_RECIPE\";\n//actions for posting a new recipe\n\nexport const POST_NEW_RECIPE_START = \"POST_NEW_RECIPE_START\";\nexport const POST_NEW_RECIPE_SUCCESS = \"POST_NEW_RECIPE_SUCCESS\";\nexport const POST_NEW_RECIPE_FAILURE = \"POST_NEW_RECIPE_FAILURE\"; //actions for updating a new recipe\n\nexport const UPDATE_A_RECIPE_START = \"UPDATE_A_RECIPE_START\";\nexport const UPDATE_A_RECIPE_SUCCESS = \"UPDATE_A_RECIPE_SUCCESS\";\nexport const UPDATE_A_RECIPE_FAILURE = \"UPDATE_A_RECIPE_FAILURE\"; //actions for deleting a recipe\n\nexport const DELETE_A_RECIPE_START = \"DELETE_A_RECIPE_START\";\nexport const DELETE_A_RECIPE_SUCCESS = \"DELETE_A_RECIPE_SUCCESS\";\nexport const DELETE_A_RECIPE_FAILURE = \"DELETE_A_RECIPE_FAILURE\"; //specific for all recipes\n\nexport const getRecipes = () => dispatch => {\n  dispatch({\n    type: FETCH_RECIPES_START\n  });\n  axios.get(\"https://chef-2.herokuapp.com/api/recipes/\").then(res => {\n    console.log(res.data);\n    dispatch({\n      type: FETCH_RECIPES_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: FETCH_RECIPES_FAILURE,\n      payload: err.res\n    });\n  });\n}; //specific for just one recipe\n\nexport const getARecipe = id => dispatch => {\n  dispatch({\n    type: FETCH_A_RECIPE_START\n  });\n  axios.get(`https://chef-2.herokuapp.com/api/recipes/${id}`).then(res => {\n    console.log(res.data); //dispatch({type: FETCH_A_RECIPE_SUCCESS, payload: res.data})\n  }).catch(err => {\n    dispatch({\n      type: FETCH_A_RECIPE_FAILURE,\n      payload: err.res\n    });\n  });\n}; //specific for one chef's set of recipes\n\nexport const getChefRecipes = userId => dispatch => {\n  dispatch({\n    type: FETCH_CHEF_RECIPES_START\n  });\n  axios.get(`https://chef-2.herokuapp.com/api/recipes/user/${userId}`).then(res => {\n    console.log(res.data); //dispatch({type: FETCH_CHEF_RECIPES_SUCCESS, payload: res.data})\n  }).catch(err => {\n    dispatch({\n      type: FETCH_CHEF_RECIPES_FAILURE,\n      payload: err.res\n    });\n  });\n}; //specific for posting a new recipe\n\nexport const postNewRecipe = data => dispatch => {\n  //need to include what data to post\n  dispatch({\n    type: POST_NEW_RECIPE_START\n  });\n  axios.post(\"https://chef-2.herokuapp.com/api/recipes/post\", data).then(res => {\n    console.log(res); // dispatch({ type: POST_NEW_RECIPE_SUCCESS, payload: res.data });\n  }).catch(err => {\n    dispatch({\n      type: POST_NEW_RECIPE_FAILURE,\n      payload: err.res\n    });\n  });\n}; //for updating a recipe\n\nexport const updateRecipe = (data, id) => dispatch => {\n  //need to include what data to post\n  dispatch({\n    type: UPDATE_A_RECIPE_START\n  });\n  axios.put(`https://chef-2.herokuapp.com/api/recipes/update/${id}`, data).then(res => {\n    console.log(res); // dispatch({ type: UPDATE_A_RECIPE_SUCCESS, payload: res.data });\n  }).catch(err => {\n    dispatch({\n      type: UPDATE_A_RECIPE_FAILURE,\n      payload: err.res\n    });\n  });\n}; //for deleting a recipe\n\nexport const deleteRecipe = id => dispatch => {\n  //need to include what data to post\n  dispatch({\n    type: DELETE_A_RECIPE_START\n  });\n  axios.delete(`https://chef-2.herokuapp.com/api/recipes/delete/${id}`).then(res => {\n    console.log(res); // dispatch({ type: DELETE_A_RECIPE_SUCCESS, payload: res.data });\n  }).catch(err => {\n    dispatch({\n      type: DELETE_A_RECIPE_FAILURE,\n      payload: err.res\n    });\n  });\n};","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/actions/recipeAction.js"],"names":["axios","FETCH_RECIPES_START","FETCH_RECIPES_SUCCESS","FETCH_RECIPES_FAILURE","FETCH_A_RECIPE_START","FETCH_A_RECIPE_SUCCESS","FETCH_A_RECIPE_FAILURE","FETCH_CHEF_RECIPES_START","FETCH_CHEF_RECIPES_SUCCESS","FETCH_CHEF_RECIPES_FAILURE","POST_NEW_RECIPE_START","POST_NEW_RECIPE_SUCCESS","POST_NEW_RECIPE_FAILURE","UPDATE_A_RECIPE_START","UPDATE_A_RECIPE_SUCCESS","UPDATE_A_RECIPE_FAILURE","DELETE_A_RECIPE_START","DELETE_A_RECIPE_SUCCESS","DELETE_A_RECIPE_FAILURE","getRecipes","dispatch","type","get","then","res","console","log","data","payload","catch","err","getARecipe","id","getChefRecipes","userId","postNewRecipe","post","updateRecipe","put","deleteRecipe","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n// we need to fetch ALL recipes --outlined\n// fetch one recipe --outlined\n// we need to fetch recipes specific to a chef --outlined\n\n// we need to post a new recipe to database --outlined\n// update a recipe --outlined\n// delete a recipe\n\n//actions for all recipes\nexport const FETCH_RECIPES_START = \"FETCH_RECIPES_START\";\nexport const FETCH_RECIPES_SUCCESS = \"FETCH_RECIPES_SUCCESS\";\nexport const FETCH_RECIPES_FAILURE = \"FETCH_RECIPES_FAILURE\";\n\n//actions for fetching one recipe\nexport const FETCH_A_RECIPE_START = \"FETCH_A_RECIPE_START\";\nexport const FETCH_A_RECIPE_SUCCESS = \"FETCH_A_RECIPE_SUCCESS\";\nexport const FETCH_A_RECIPE_FAILURE = \"FETCH_A_RECIPE_FAILURE\";\n\n//actions for fetching ONE chef's recipes\nexport const FETCH_CHEF_RECIPES_START = \"FETCH_CHEF_RECIPES_START\";\nexport const FETCH_CHEF_RECIPES_SUCCESS = \"FETCH_CHEF_RECIPES_SUCCESS\";\nexport const FETCH_CHEF_RECIPES_FAILURE = \"FETCH_CHEF_RECIPES_FAILURE\";\n\n//action for posting a new recipe\n//export const ADD_RECIPE = \"ADD_RECIPE\";\n\n//actions for posting a new recipe\nexport const POST_NEW_RECIPE_START = \"POST_NEW_RECIPE_START\";\nexport const POST_NEW_RECIPE_SUCCESS = \"POST_NEW_RECIPE_SUCCESS\";\nexport const POST_NEW_RECIPE_FAILURE = \"POST_NEW_RECIPE_FAILURE\";\n\n//actions for updating a new recipe\nexport const UPDATE_A_RECIPE_START = \"UPDATE_A_RECIPE_START\";\nexport const UPDATE_A_RECIPE_SUCCESS = \"UPDATE_A_RECIPE_SUCCESS\";\nexport const UPDATE_A_RECIPE_FAILURE = \"UPDATE_A_RECIPE_FAILURE\";\n\n//actions for deleting a recipe\nexport const DELETE_A_RECIPE_START = \"DELETE_A_RECIPE_START\";\nexport const DELETE_A_RECIPE_SUCCESS = \"DELETE_A_RECIPE_SUCCESS\";\nexport const DELETE_A_RECIPE_FAILURE = \"DELETE_A_RECIPE_FAILURE\";\n\n//specific for all recipes\nexport const getRecipes = () => dispatch => {\n  dispatch({ type: FETCH_RECIPES_START });\n  axios\n    .get(\"https://chef-2.herokuapp.com/api/recipes/\")\n    .then(res => {\n      console.log(res.data);\n      dispatch({ type: FETCH_RECIPES_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({ type: FETCH_RECIPES_FAILURE, payload: err.res });\n    });\n};\n\n//specific for just one recipe\nexport const getARecipe = id => dispatch => {\n  dispatch({ type: FETCH_A_RECIPE_START });\n  axios\n    .get(`https://chef-2.herokuapp.com/api/recipes/${id}`)\n    .then(res => {\n      console.log(res.data);\n      //dispatch({type: FETCH_A_RECIPE_SUCCESS, payload: res.data})\n    })\n    .catch(err => {\n      dispatch({ type: FETCH_A_RECIPE_FAILURE, payload: err.res });\n    });\n};\n\n//specific for one chef's set of recipes\nexport const getChefRecipes = userId => dispatch => {\n  dispatch({ type: FETCH_CHEF_RECIPES_START });\n  axios\n    .get(`https://chef-2.herokuapp.com/api/recipes/user/${userId}`)\n    .then(res => {\n      console.log(res.data);\n      //dispatch({type: FETCH_CHEF_RECIPES_SUCCESS, payload: res.data})\n    })\n    .catch(err => {\n      dispatch({ type: FETCH_CHEF_RECIPES_FAILURE, payload: err.res });\n    });\n};\n\n//specific for posting a new recipe\nexport const postNewRecipe = data => dispatch => {\n  //need to include what data to post\n\n  dispatch({ type: POST_NEW_RECIPE_START });\n  axios\n    .post(\"https://chef-2.herokuapp.com/api/recipes/post\", data)\n    .then(res => {\n      console.log(res);\n      // dispatch({ type: POST_NEW_RECIPE_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: POST_NEW_RECIPE_FAILURE, payload: err.res });\n    });\n};\n\n//for updating a recipe\nexport const updateRecipe = (data, id) => dispatch => {\n  //need to include what data to post\n\n  dispatch({ type: UPDATE_A_RECIPE_START });\n  axios\n    .put(`https://chef-2.herokuapp.com/api/recipes/update/${id}`, data)\n    .then(res => {\n      console.log(res);\n      // dispatch({ type: UPDATE_A_RECIPE_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: UPDATE_A_RECIPE_FAILURE, payload: err.res });\n    });\n};\n\n//for deleting a recipe\nexport const deleteRecipe = id => dispatch => {\n  //need to include what data to post\n\n  dispatch({ type: DELETE_A_RECIPE_START });\n  axios\n    .delete(`https://chef-2.herokuapp.com/api/recipes/delete/${id}`)\n    .then(res => {\n      console.log(res);\n      // dispatch({ type: DELETE_A_RECIPE_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: DELETE_A_RECIPE_FAILURE, payload: err.res });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}