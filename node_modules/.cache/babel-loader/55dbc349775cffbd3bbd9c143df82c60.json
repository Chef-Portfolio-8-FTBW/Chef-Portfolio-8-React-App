{"ast":null,"code":"import axios from \"axios\"; //will need to update with axiosWithAuth\n//we want to fetch all chef profiles --outlined\n//we want to create a new chef profile --outlined\n// we want to update a chef profile --outlined\n// we want to delete a chef profile --outlined\n//actions for all chefs\n\nexport const FETCH_CHEFS_START = \"FETCH_CHEFS_START\";\nexport const FETCH_CHEFS_SUCCESS = \"FETCH_CHEFS_SUCCESS\";\nexport const FETCH_CHEFS_FAILURE = \"FETCH_CHEFS_FAILURE\"; //actions for posting a new chef profile\n\nexport const POST_NEW_CHEF_START = \"POST_NEW_CHEF_START\";\nexport const POST_NEW_CHEF_SUCCESS = \"POST_NEW_CHEF_SUCCESS\";\nexport const POST_NEW_CHEF_FAILURE = \"POST_NEW_CHEF_FAILURE\"; //actions for updating chef profile\n\nexport const UPDATE_CHEF_PROFILE_START = \"UPDATE_CHEF_PROFILE_START\";\nexport const UPDATE_CHEF_PROFILE_SUCCESS = \"UPDATE_CHEF_PROFILE_SUCCESS\";\nexport const UPDATE_CHEF_PROFILE_FAILURE = \"UPDATE_CHEF_PROFILE_FAILURE\"; //actions for deleting chef profile\n\nexport const DELETE_CHEF_PROFILE_START = \"DELETE_CHEF_PROFILE_START\";\nexport const DELETE_CHEF_PROFILE_SUCCESS = \"DELETE_CHEF_PROFILE_SUCCESS\";\nexport const DELETE_CHEF_PROFILE_FAILURE = \"DELETE_CHEF_PROFILE_FAILURE\"; //specific for all chefs\n\nexport const getChefs = () => dispatch => {\n  dispatch({\n    type: FETCH_CHEFS_START\n  });\n  axios.get(\"URL\").then(res => {\n    console.log(res.data); //dispatch({type: FETCH_CHEFS_SUCCESS, payload: res.data})\n  }).catch(err => {\n    dispatch({\n      type: FETCH_CHEFS_FAILURE,\n      payload: err.res\n    });\n  });\n}; //specific for posting a new chef profile\n\nexport const postNewChefProfile = data => dispatch => {\n  //need to include what data to post\n  dispatch({\n    type: POST_NEW_CHEF_START\n  });\n  axios.post(\"URL\", data).then(res => {\n    console.log(res); // dispatch({ type: POST_NEW_CHEF_SUCCESS, payload: res.data });\n  }).catch(err => {\n    dispatch({\n      type: POST_NEW_CHEF_FAILURE,\n      payload: err.res\n    });\n  });\n}; //for updating chef profile\n\nexport const updateChefProfile = (data, id) => dispatch => {\n  //need to include what data to post\n  dispatch({\n    type: UPDATE_CHEF_PROFILE_START\n  });\n  axios.put(`URL/${id}`, data).then(res => {\n    console.log(res); // dispatch({ type: UPDATE_CHEF_PROFILE_SUCCESS, payload: res.data });\n  }).catch(err => {\n    dispatch({\n      type: UPDATE_CHEF_PROFILE_FAILURE,\n      payload: err.res\n    });\n  });\n}; //for deleting a chef profile\n\nexport const deleteChefProfile = id => dispatch => {\n  //need to include what data to post\n  dispatch({\n    type: DELETE_CHEF_PROFILE_START\n  });\n  axios.delete(`URL/${id}`).then(res => {\n    console.log(res); // dispatch({ type: DELETE_CHEF_PROFILE_SUCCESS, payload: res.data });\n  }).catch(err => {\n    dispatch({\n      type: DELETE_CHEF_PROFILE_FAILURE,\n      payload: err.res\n    });\n  });\n};","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/actions/chefAction.js"],"names":["axios","FETCH_CHEFS_START","FETCH_CHEFS_SUCCESS","FETCH_CHEFS_FAILURE","POST_NEW_CHEF_START","POST_NEW_CHEF_SUCCESS","POST_NEW_CHEF_FAILURE","UPDATE_CHEF_PROFILE_START","UPDATE_CHEF_PROFILE_SUCCESS","UPDATE_CHEF_PROFILE_FAILURE","DELETE_CHEF_PROFILE_START","DELETE_CHEF_PROFILE_SUCCESS","DELETE_CHEF_PROFILE_FAILURE","getChefs","dispatch","type","get","then","res","console","log","data","catch","err","payload","postNewChefProfile","post","updateChefProfile","id","put","deleteChefProfile","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n//will need to update with axiosWithAuth\n\n//we want to fetch all chef profiles --outlined\n//we want to create a new chef profile --outlined\n// we want to update a chef profile --outlined\n// we want to delete a chef profile --outlined\n\n//actions for all chefs\nexport const FETCH_CHEFS_START = \"FETCH_CHEFS_START\";\nexport const FETCH_CHEFS_SUCCESS = \"FETCH_CHEFS_SUCCESS\";\nexport const FETCH_CHEFS_FAILURE = \"FETCH_CHEFS_FAILURE\";\n\n//actions for posting a new chef profile\nexport const POST_NEW_CHEF_START = \"POST_NEW_CHEF_START\";\nexport const POST_NEW_CHEF_SUCCESS = \"POST_NEW_CHEF_SUCCESS\";\nexport const POST_NEW_CHEF_FAILURE = \"POST_NEW_CHEF_FAILURE\";\n\n//actions for updating chef profile\nexport const UPDATE_CHEF_PROFILE_START = \"UPDATE_CHEF_PROFILE_START\";\nexport const UPDATE_CHEF_PROFILE_SUCCESS = \"UPDATE_CHEF_PROFILE_SUCCESS\";\nexport const UPDATE_CHEF_PROFILE_FAILURE = \"UPDATE_CHEF_PROFILE_FAILURE\";\n\n//actions for deleting chef profile\nexport const DELETE_CHEF_PROFILE_START = \"DELETE_CHEF_PROFILE_START\";\nexport const DELETE_CHEF_PROFILE_SUCCESS = \"DELETE_CHEF_PROFILE_SUCCESS\";\nexport const DELETE_CHEF_PROFILE_FAILURE = \"DELETE_CHEF_PROFILE_FAILURE\";\n\n//specific for all chefs\nexport const getChefs = () => dispatch => {\n  dispatch({ type: FETCH_CHEFS_START });\n  axios\n    .get(\"URL\")\n    .then(res => {\n      console.log(res.data);\n      //dispatch({type: FETCH_CHEFS_SUCCESS, payload: res.data})\n    })\n    .catch(err => {\n      dispatch({ type: FETCH_CHEFS_FAILURE, payload: err.res });\n    });\n};\n\n//specific for posting a new chef profile\nexport const postNewChefProfile = data => dispatch => {\n  //need to include what data to post\n\n  dispatch({ type: POST_NEW_CHEF_START });\n  axios\n    .post(\"URL\", data)\n    .then(res => {\n      console.log(res);\n      // dispatch({ type: POST_NEW_CHEF_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: POST_NEW_CHEF_FAILURE, payload: err.res });\n    });\n};\n\n//for updating chef profile\nexport const updateChefProfile = (data, id) => dispatch => {\n  //need to include what data to post\n\n  dispatch({ type: UPDATE_CHEF_PROFILE_START });\n  axios\n    .put(`URL/${id}`, data)\n    .then(res => {\n      console.log(res);\n      // dispatch({ type: UPDATE_CHEF_PROFILE_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: UPDATE_CHEF_PROFILE_FAILURE, payload: err.res });\n    });\n};\n\n//for deleting a chef profile\nexport const deleteChefProfile = id => dispatch => {\n  //need to include what data to post\n\n  dispatch({ type: DELETE_CHEF_PROFILE_START });\n  axios\n    .delete(`URL/${id}`)\n    .then(res => {\n      console.log(res);\n      // dispatch({ type: DELETE_CHEF_PROFILE_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: DELETE_CHEF_PROFILE_FAILURE, payload: err.res });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}