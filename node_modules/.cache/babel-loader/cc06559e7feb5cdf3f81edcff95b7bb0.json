{"ast":null,"code":"import _slicedToArray from \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/Recipes.js\";\n//map over array of recipes and render a RecipeCard component for each here.\n// thinking here, we should make this reusable so that the Recipes can be displayed on a chef's profile (just his/her recipes) and on the Guest Homepage (all recipes in database)\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRecipes, getARecipe } from \"../actions/recipeAction\";\nimport RecipeCard from \"./RecipeCard\";\nimport axios from \"axios\";\n\nfunction Recipes(props) {\n  console.log(props.recipes);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"https://chef-2.herokuapp.com/api/recipes\").then(res => {\n      console.log(res);\n      setRecipes(res.data);\n    });\n  }, []); //Search state and input field state\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputText = _useState4[0],\n        setInputText = _useState4[1];\n\n  const _useState5 = useState(recipes),\n        _useState6 = _slicedToArray(_useState5, 2),\n        searchResults = _useState6[0],\n        setSearchResults = _useState6[1];\n\n  useEffect(() => {\n    setSearchResults(recipes.filter(recipe => {\n      return recipe.recipe_name.toLowerCase().includes(inputText.toLowerCase());\n    }));\n  }, [inputText, recipes]);\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n    console.log(inputText);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"searchBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"searchFormDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"EXPLORE MORE! Search by Chef, Ingredient, Recipe, Type and More!\")), React.createElement(\"form\", {\n    class: \"searchForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: inputText,\n    onChange: handleChange,\n    name: \"search\",\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))), searchResults.map(recipe => {\n    return React.createElement(RecipeCard, {\n      getARecipe: props.getARecipe,\n      key: recipe.id,\n      history: history,\n      chefName: recipe.chef_name,\n      title: recipe.recipe_name,\n      photo: recipe.recipe_photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes.recipes,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRecipes,\n  getARecipe\n})(Recipes);","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/Recipes.js"],"names":["React","useState","useEffect","connect","getRecipes","getARecipe","RecipeCard","axios","Recipes","props","console","log","recipes","setRecipes","get","then","res","data","inputText","setInputText","searchResults","setSearchResults","filter","recipe","recipe_name","toLowerCase","includes","handleChange","e","target","value","map","id","history","chef_name","recipe_photo","mapStateToProps","state","error"],"mappings":"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","sourcesContent":["//map over array of recipes and render a RecipeCard component for each here.\n// thinking here, we should make this reusable so that the Recipes can be displayed on a chef's profile (just his/her recipes) and on the Guest Homepage (all recipes in database)\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRecipes, getARecipe } from \"../actions/recipeAction\";\nimport RecipeCard from \"./RecipeCard\";\nimport axios from \"axios\";\n\nfunction Recipes(props) {\n  console.log(props.recipes);\n\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"https://chef-2.herokuapp.com/api/recipes\").then(res => {\n      console.log(res);\n      setRecipes(res.data);\n    });\n  }, []);\n\n  //Search state and input field state\n\n  const [inputText, setInputText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState(recipes);\n\n  useEffect(() => {\n    setSearchResults(\n      recipes.filter(recipe => {\n        return recipe.recipe_name\n          .toLowerCase()\n          .includes(inputText.toLowerCase());\n      })\n    );\n  }, [inputText, recipes]);\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n    console.log(inputText);\n  };\n\n  return (\n    <>\n      <div className=\"searchBar\">\n        <div className=\"searchFormDesc\">\n          <p>\n            EXPLORE MORE! Search by Chef, Ingredient, Recipe, Type and More!\n          </p>\n        </div>\n\n        <form class=\"searchForm\">\n          <label>\n            <input\n              type=\"text\"\n              value={inputText}\n              onChange={handleChange}\n              name=\"search\"\n              placeholder=\"Search\"\n            />\n          </label>\n        </form>\n      </div>\n\n      {searchResults.map(recipe => {\n        return (\n          <RecipeCard\n            getARecipe={props.getARecipe}\n            key={recipe.id}\n            history={history}\n            chefName={recipe.chef_name}\n            title={recipe.recipe_name}\n            photo={recipe.recipe_photo}\n          />\n        );\n      })}\n\n      {/* <button onClick={props.getRecipes}>Show Me Rick</button> */}\n      {/* {recipes.map(recipe => (\n        <RecipeCard\n          key={recipe.id}\n          chefName={recipe.chef_name}\n          title={recipe.recipe_name}\n          photo={recipe.recipe_photo}\n          // ingredients={recipe.recipe_ingredients}\n          // cookTime={recipe.cook_time}\n          // prepTime={recipe.prep_time}\n          // instructions={recipe.instructions}\n          // servings={recipe.servings}\n        />\n      ))} */}\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes.recipes,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { getRecipes, getARecipe })(Recipes);\n"]},"metadata":{},"sourceType":"module"}