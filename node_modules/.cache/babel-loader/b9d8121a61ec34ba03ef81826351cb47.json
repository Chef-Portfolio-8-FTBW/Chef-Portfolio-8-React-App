{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/SignUp.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { postNewChefProfile } from \"../actions/index\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nconst userSchema = Yup.object().shape({\n  username: Yup.string().required().min(2),\n  password: Yup.string().required().min(3),\n  confirmPassword: Yup.string().required().min(3),\n  full_name: Yup.string().required(),\n  email: Yup.string().email()\n});\n\nconst SignUp = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      full_name: \"\",\n      email: \"\",\n      phone: \"\",\n      Bio: \"\",\n      user_picture: \"\"\n    },\n    onSubmit: (values, tools) => {\n      tools.resetForm();\n      props.postNewChefProfile(values);\n    },\n    validationSchema: userSchema,\n    render: props => {\n      return React.createElement(Form, {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"*Username:\", React.createElement(Field, {\n        className: \"input inputName\",\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), props.errors.username && props.touched.username ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, props.errors.username) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"*Password:\", React.createElement(Field, {\n        className: \"input inputPassword\",\n        name: \"password\",\n        type: \"text\",\n        placeholder: \"enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), props.errors.password && props.touched.password ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, props.errors.password) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"*Confirm Password:\", React.createElement(Field, {\n        className: \"input inputConfirmPassword\",\n        name: \"confirmPassword\",\n        type: \"text\",\n        placeholder: \"confirm password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), props.errors.confirmPassword && props.touched.confirmPassword ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, props.errors.confirmPassword) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"*Full name\", React.createElement(Field, {\n        className: \"input inputFullName\",\n        type: \"text\",\n        name: \"full_name\",\n        placeholder: \"Jon Snow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), props.errors.full_name && props.touched.full_name ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, props.errors.full_name) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"*Email\", React.createElement(Field, {\n        className: \"input inputEmail\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"jon@winterfell.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), props.errors.email && props.touched.email ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, props.errors.email) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Phone Number\", React.createElement(Field, {\n        className: \"input inputPhoneNumber\",\n        type: \"text\",\n        name: \"phone\",\n        placeholder: \"808-555-1234\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Bio:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: \"input inputBio\",\n        as: \"textarea\",\n        name: \"Bio\",\n        placeholder: \"About me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Profile Image:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: \"input inputImage\",\n        type: \"file\",\n        name: \"user_picture\",\n        placeholder: \"About me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/sign-in\",\n    className: \"signUpSwitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Already have an account? Sign In!\"), React.createElement(Link, {\n    to: \"/\",\n    className: \"guestSignIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Just wanna browse? Continue as a guest.\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postNewChefProfile\n})(SignUp);","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/SignUp.js"],"names":["React","connect","postNewChefProfile","Link","Formik","Form","Field","Yup","userSchema","object","shape","username","string","required","min","password","confirmPassword","full_name","email","SignUp","props","phone","Bio","user_picture","values","tools","resetForm","errors","touched","mapStateToProps","state","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { postNewChefProfile } from \"../actions/index\";\n\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst userSchema = Yup.object().shape({\n  username: Yup.string()\n    .required()\n    .min(2),\n  password: Yup.string()\n    .required()\n    .min(3),\n  confirmPassword: Yup.string()\n    .required()\n    .min(3),\n  full_name: Yup.string()\n    .required(),\n  email: Yup.string()\n    .email()\n});\n\nconst SignUp = props => {\n  return (\n    <>\n      <h1>Sign Up</h1>\n\n      <Formik\n        initialValues={{\n          username: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          full_name: \"\",\n          email: \"\",\n          phone: \"\",\n          Bio: \"\",\n          user_picture: \"\"\n        }}\n        onSubmit={(values, tools) => {\n          tools.resetForm();\n          props.postNewChefProfile(values);\n        }}\n        validationSchema={userSchema}\n        render={props => {\n          return (\n            <Form className=\"formContainer\">\n\n              {/* Required fields */}\n\n              <label>\n                *Username:\n                <Field\n                  className=\"input inputName\"\n                  name=\"username\"\n                  type=\"text\"\n                  placeholder=\"enter username\"\n                />\n              </label>\n              {props.errors.username && props.touched.username ? (\n                <span className=\"red\">{props.errors.username}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Password:\n                <Field\n                  className=\"input inputPassword\"\n                  name=\"password\"\n                  type=\"text\"\n                  placeholder=\"enter password\"\n                />\n              </label>\n              {props.errors.password && props.touched.password ? (\n                <span className=\"red\">{props.errors.password}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Confirm Password:\n                <Field\n                  className=\"input inputConfirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"text\"\n                  placeholder=\"confirm password\"\n                />\n              </label>\n              {props.errors.confirmPassword && props.touched.confirmPassword ? (\n                <span className=\"red\">{props.errors.confirmPassword}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Full name\n                <Field\n                className=\"input inputFullName\"\n                  type=\"text\"\n                  name=\"full_name\"\n                  placeholder=\"Jon Snow\"\n                />\n              </label>\n              {props.errors.full_name && props.touched.full_name ? (\n                <span className=\"red\">{props.errors.full_name}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Email\n                <Field\n                className=\"input inputEmail\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"jon@winterfell.com\"\n                />\n              </label>\n              {props.errors.email && props.touched.email ? (\n                <span className=\"red\">{props.errors.email}</span>\n              ) : (\n                \"\"\n              )}\n\n              {/* Non required fields*/}\n\n              <label>\n                Phone Number\n                <Field\n                className=\"input inputPhoneNumber\"\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"808-555-1234\"\n                />\n              </label>\n\n              <label>\n                Bio:\n                <br></br>\n                <Field\n                className=\"input inputBio\"\n                  as=\"textarea\"\n                  name=\"Bio\"\n                  placeholder=\"About me\"\n                />\n              </label>\n\n              <label>\n                Profile Image:\n                <br></br>\n                <Field\n                  className=\"input inputImage\"\n                  type=\"file\"\n                  name=\"user_picture\"\n                  placeholder=\"About me\"\n                />\n              </label>\n\n              <input className=\"submitButton\" type=\"submit\" />\n            </Form>\n          );\n        }}\n      />\n      <Link to=\"/sign-in\" className=\"signUpSwitch\">\n        Already have an account? Sign In!\n      </Link>\n\n      <Link to=\"/\" className=\"guestSignIn\">\n        Just wanna browse? Continue as a guest.\n      </Link>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { postNewChefProfile })(SignUp);\n"]},"metadata":{},"sourceType":"module"}