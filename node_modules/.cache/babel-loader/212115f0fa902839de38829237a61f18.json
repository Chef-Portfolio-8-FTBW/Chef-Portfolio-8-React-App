{"ast":null,"code":"import _slicedToArray from \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/SignUp.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { postNewChefProfile } from \"../actions/index\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nconst userSchema = Yup.object().shape({\n  username: Yup.string().required().min(2),\n  password: Yup.string().required().min(3),\n  confirmPassword: Yup.string().required().min(3),\n  full_name: Yup.string().required(),\n  email: Yup.string().email()\n});\n\nconst SignUp = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      full_name: \"\",\n      email: \"\",\n      phone: \"\",\n      bio: \"\",\n      user_picture: \"\"\n    },\n    onSubmit: (values, tools) => {\n      tools.resetForm();\n      axios.post(\"https://chef-2.herokuapp.com/api/login/register\", values).then(res => {\n        console.log(\"SUCCESSFUL\", res);\n        setUser([...user, res.data]);\n      }).catch(err => {\n        console.log(\"FAILURE\", err);\n      });\n    },\n    validationSchema: userSchema,\n    render: props => {\n      return React.createElement(Form, {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"*Username:\", React.createElement(Field, {\n        className: \"input inputName\",\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), props.errors.username && props.touched.username ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, props.errors.username) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"*Password:\", React.createElement(Field, {\n        className: \"input inputPassword\",\n        name: \"password\",\n        type: \"text\",\n        placeholder: \"enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), props.errors.password && props.touched.password ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, props.errors.password) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"*Confirm Password:\", React.createElement(Field, {\n        className: \"input inputConfirmPassword\",\n        name: \"confirmPassword\",\n        type: \"text\",\n        placeholder: \"confirm password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), props.errors.confirmPassword && props.touched.confirmPassword ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, props.errors.confirmPassword) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"*Full name\", React.createElement(Field, {\n        className: \"input inputFullName\",\n        type: \"text\",\n        name: \"full_name\",\n        placeholder: \"Jon Snow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), props.errors.full_name && props.touched.full_name ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, props.errors.full_name) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"*Email\", React.createElement(Field, {\n        className: \"input inputEmail\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"jon@winterfell.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), props.errors.email && props.touched.email ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, props.errors.email) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Phone Number\", React.createElement(Field, {\n        className: \"input inputPhoneNumber\",\n        type: \"text\",\n        name: \"phone\",\n        placeholder: \"808-555-1234\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Bio:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: \"input inputBio\",\n        as: \"textarea\",\n        name: \"bio\",\n        placeholder: \"About me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Profile Image:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: \"input inputImage\",\n        type: \"text\",\n        name: \"user_picture\",\n        placeholder: \"About me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/sign-in\",\n    className: \"signUpSwitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Already have an account? Sign In!\"), React.createElement(Link, {\n    to: \"/\",\n    className: \"guestSignIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Just wanna browse? Continue as a guest.\"));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/SignUp.js"],"names":["React","useState","connect","postNewChefProfile","axios","Link","Formik","Form","Field","Yup","userSchema","object","shape","username","string","required","min","password","confirmPassword","full_name","email","SignUp","props","user","setUser","phone","bio","user_picture","values","tools","resetForm","post","then","res","console","log","data","catch","err","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { postNewChefProfile } from \"../actions/index\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst userSchema = Yup.object().shape({\n  username: Yup.string()\n    .required()\n    .min(2),\n  password: Yup.string()\n    .required()\n    .min(3),\n  confirmPassword: Yup.string()\n    .required()\n    .min(3),\n  full_name: Yup.string().required(),\n  email: Yup.string().email()\n});\n\nconst SignUp = props => {\n  const [user, setUser] = useState({});\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n\n      <Formik\n        initialValues={{\n          username: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          full_name: \"\",\n          email: \"\",\n          phone: \"\",\n          bio: \"\",\n          user_picture: \"\"\n        }}\n        onSubmit={(values, tools) => {\n          tools.resetForm();\n          axios\n            .post(\"https://chef-2.herokuapp.com/api/login/register\", values)\n            .then(res => {\n              console.log(\"SUCCESSFUL\", res);\n\n              setUser([...user, res.data]);\n            })\n            .catch(err => {\n              console.log(\"FAILURE\", err);\n            });\n        }}\n        validationSchema={userSchema}\n        render={props => {\n          return (\n            <Form className=\"formContainer\">\n              {/* Required fields */}\n\n              <label>\n                *Username:\n                <Field\n                  className=\"input inputName\"\n                  name=\"username\"\n                  type=\"text\"\n                  placeholder=\"enter username\"\n                />\n              </label>\n              {props.errors.username && props.touched.username ? (\n                <span className=\"red\">{props.errors.username}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Password:\n                <Field\n                  className=\"input inputPassword\"\n                  name=\"password\"\n                  type=\"text\"\n                  placeholder=\"enter password\"\n                />\n              </label>\n              {props.errors.password && props.touched.password ? (\n                <span className=\"red\">{props.errors.password}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Confirm Password:\n                <Field\n                  className=\"input inputConfirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"text\"\n                  placeholder=\"confirm password\"\n                />\n              </label>\n              {props.errors.confirmPassword && props.touched.confirmPassword ? (\n                <span className=\"red\">{props.errors.confirmPassword}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Full name\n                <Field\n                  className=\"input inputFullName\"\n                  type=\"text\"\n                  name=\"full_name\"\n                  placeholder=\"Jon Snow\"\n                />\n              </label>\n              {props.errors.full_name && props.touched.full_name ? (\n                <span className=\"red\">{props.errors.full_name}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Email\n                <Field\n                  className=\"input inputEmail\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"jon@winterfell.com\"\n                />\n              </label>\n              {props.errors.email && props.touched.email ? (\n                <span className=\"red\">{props.errors.email}</span>\n              ) : (\n                \"\"\n              )}\n\n              {/* Non required fields*/}\n\n              <label>\n                Phone Number\n                <Field\n                  className=\"input inputPhoneNumber\"\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"808-555-1234\"\n                />\n              </label>\n\n              <label>\n                Bio:\n                <br></br>\n                <Field\n                  className=\"input inputBio\"\n                  as=\"textarea\"\n                  name=\"bio\"\n                  placeholder=\"About me\"\n                />\n              </label>\n\n              <label>\n                Profile Image:\n                <br></br>\n                <Field\n                  className=\"input inputImage\"\n                  type=\"text\"\n                  name=\"user_picture\"\n                  placeholder=\"About me\"\n                />\n              </label>\n\n              <input className=\"submitButton\" type=\"submit\" />\n            </Form>\n          );\n        }}\n      />\n      <Link to=\"/sign-in\" className=\"signUpSwitch\">\n        Already have an account? Sign In!\n      </Link>\n\n      <Link to=\"/\" className=\"guestSignIn\">\n        Just wanna browse? Continue as a guest.\n      </Link>\n    </>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}