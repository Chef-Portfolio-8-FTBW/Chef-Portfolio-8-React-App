{"ast":null,"code":"import _slicedToArray from \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/Recipes.js\";\n//map over array of recipes and render a RecipeCard component for each here.\n// thinking here, we should make this reusable so that the Recipes can be displayed on a chef's profile (just his/her recipes) and on the Guest Homepage (all recipes in database)\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRecipes } from \"../actions/recipeAction\";\nimport RecipeCard from \"./RecipeCard\";\nimport axios from \"axios\";\n\nfunction Recipes(props) {\n  console.log(props.recipes);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"https://chef-2.herokuapp.com/api/recipes/\").then(res => {\n      console.log(res);\n      setRecipes(res.data);\n    });\n  }, []); //Search state and input field state\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputText = _useState4[0],\n        setInputText = _useState4[1];\n\n  const _useState5 = useState(recipes),\n        _useState6 = _slicedToArray(_useState5, 2),\n        searchResults = _useState6[0],\n        setSearchResults = _useState6[1];\n\n  useEffect(() => {\n    setSearchResults(recipes.filter(recipe => {\n      return recipe.recipe_name.toLowerCase().includes(inputText.toLowerCase());\n    }));\n  }, [inputText, recipes]);\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n    console.log(inputText);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"searchBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"searchFormDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"EXPLORE MORE! Search by Chef, Ingredient, Recipe, Type and More!\")), React.createElement(\"form\", {\n    class: \"searchForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: inputText,\n    onChange: handleChange,\n    name: \"search\",\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))), searchResults.map(recipe => {\n    return React.createElement(RecipeCard, {\n      key: recipe.id,\n      chefName: recipe.chef_name,\n      title: recipe.recipe_name,\n      photo: recipe.recipe_photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes.recipes,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRecipes\n})(Recipes);","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/Recipes.js"],"names":["React","useState","useEffect","connect","getRecipes","RecipeCard","axios","Recipes","props","console","log","recipes","setRecipes","get","then","res","data","inputText","setInputText","searchResults","setSearchResults","filter","recipe","recipe_name","toLowerCase","includes","handleChange","e","target","value","map","id","chef_name","recipe_photo","mapStateToProps","state","error"],"mappings":"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","sourcesContent":["//map over array of recipes and render a RecipeCard component for each here.\n// thinking here, we should make this reusable so that the Recipes can be displayed on a chef's profile (just his/her recipes) and on the Guest Homepage (all recipes in database)\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRecipes } from \"../actions/recipeAction\";\nimport RecipeCard from \"./RecipeCard\";\nimport axios from \"axios\";\n\nfunction Recipes(props) {\n  console.log(props.recipes);\n\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"https://chef-2.herokuapp.com/api/recipes/\").then(res => {\n      console.log(res);\n      setRecipes(res.data);\n    });\n  }, []);\n\n\n  //Search state and input field state\n\n  const [inputText, setInputText] = useState('');\n  const [searchResults, setSearchResults] = useState(recipes);\n\n  useEffect(() => {\n    setSearchResults(\n      recipes.filter(recipe => {\n        return recipe.recipe_name.toLowerCase().includes(inputText.toLowerCase())\n      })\n    )\n  }, [inputText, recipes]);\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n    console.log(inputText);\n  }\n\n  \n\n  return (\n    <>\n      <div className=\"searchBar\">\n        <div className=\"searchFormDesc\">\n          <p>EXPLORE MORE! Search by Chef, Ingredient, Recipe, Type and More!</p>\n        </div>\n\n        <form class=\"searchForm\">\n          <label>\n            <input\n              type=\"text\"\n              value={inputText}\n              onChange={handleChange}\n              name=\"search\"\n              placeholder=\"Search\"\n            />\n          </label>\n        </form>\n      </div>\n\n      {\n        searchResults.map(recipe => {\n          return(\n            <RecipeCard\n              key={recipe.id}\n              chefName={recipe.chef_name}\n              title={recipe.recipe_name}\n              photo={recipe.recipe_photo}\n            />\n          )\n        })\n      }\n\n      {/* <button onClick={props.getRecipes}>Show Me Rick</button> */}\n      {/* {recipes.map(recipe => (\n        <RecipeCard\n          key={recipe.id}\n          chefName={recipe.chef_name}\n          title={recipe.recipe_name}\n          photo={recipe.recipe_photo}\n          // ingredients={recipe.recipe_ingredients}\n          // cookTime={recipe.cook_time}\n          // prepTime={recipe.prep_time}\n          // instructions={recipe.instructions}\n          // servings={recipe.servings}\n        />\n      ))} */}\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes.recipes,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { getRecipes })(Recipes);\n"]},"metadata":{},"sourceType":"module"}