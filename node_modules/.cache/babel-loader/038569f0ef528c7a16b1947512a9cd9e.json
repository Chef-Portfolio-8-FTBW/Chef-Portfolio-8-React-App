{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/SignUp.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { postNewChefProfile } from \"../actions/index\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nconst userSchema = Yup.object().shape({\n  username: Yup.string().required().min(2),\n  password: Yup.string().required().min(3),\n  password: Yup.string().required().min(3)\n});\n\nconst SignUp = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: (values, tools) => {\n      tools.resetForm();\n      props.postNewChefProfile(values);\n    },\n    validationSchema: userSchema,\n    render: props => {\n      return React.createElement(Form, {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"*Username:\", React.createElement(Field, {\n        className: \"input inputName\",\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), props.errors.username && props.touched.username ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, props.errors.username) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"*Password:\", React.createElement(Field, {\n        className: \"input inputPassword\",\n        name: \"password\",\n        type: \"text\",\n        placeholder: \"enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), props.errors.password && props.touched.password ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, props.errors.password) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"*Confirm Password:\", React.createElement(Field, {\n        className: \"input inputConfirmPassword\",\n        name: \"confirmPassword\",\n        type: \"text\",\n        placeholder: \"confirm password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), props.errors.confirmPassword && props.touched.confirmPassword ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, props.errors.confirmPassword) : \"\", React.createElement(\"input\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/sign-in\",\n    className: \"signUpSwitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Already have an account? Sign In!\"), React.createElement(Link, {\n    to: \"/\",\n    className: \"guestSignIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Just wanna browse? Continue as a guest.\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postNewChefProfile\n})(SignUp);","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/SignUp.js"],"names":["React","connect","postNewChefProfile","Link","Formik","Form","Field","Yup","userSchema","object","shape","username","string","required","min","password","SignUp","props","confirmPassword","values","tools","resetForm","errors","touched","mapStateToProps","state","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { postNewChefProfile } from \"../actions/index\";\n\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst userSchema = Yup.object().shape({\n  username: Yup.string()\n    .required()\n    .min(2),\n  password: Yup.string()\n    .required()\n    .min(3),\n  password: Yup.string()\n    .required()\n    .min(3)\n});\n\nconst SignUp = props => {\n  return (\n    <>\n      <h1>Sign Up</h1>\n\n      <Formik\n        initialValues={{\n          username: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        }}\n        onSubmit={(values, tools) => {\n          tools.resetForm();\n          props.postNewChefProfile(values);\n        }}\n        validationSchema={userSchema}\n        render={props => {\n          return (\n            <Form className=\"formContainer\">\n              <label>\n                *Username:\n                <Field\n                  className=\"input inputName\"\n                  name=\"username\"\n                  type=\"text\"\n                  placeholder=\"enter username\"\n                />\n              </label>\n              {props.errors.username && props.touched.username ? (\n                <span className=\"red\">{props.errors.username}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Password:\n                <Field\n                  className=\"input inputPassword\"\n                  name=\"password\"\n                  type=\"text\"\n                  placeholder=\"enter password\"\n                />\n              </label>\n              {props.errors.password && props.touched.password ? (\n                <span className=\"red\">{props.errors.password}</span>\n              ) : (\n                \"\"\n              )}\n\n              <label>\n                *Confirm Password:\n                <Field\n                  className=\"input inputConfirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"text\"\n                  placeholder=\"confirm password\"\n                />\n              </label>\n              {props.errors.confirmPassword && props.touched.confirmPassword ? (\n                <span className=\"red\">{props.errors.confirmPassword}</span>\n              ) : (\n                \"\"\n              )}\n\n              <input className=\"submitButton\" type=\"submit\" />\n            </Form>\n          );\n        }}\n      />\n      <Link to=\"/sign-in\" className=\"signUpSwitch\">\n        Already have an account? Sign In!\n      </Link>\n\n      <Link to=\"/\" className=\"guestSignIn\">\n        Just wanna browse? Continue as a guest.\n      </Link>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { postNewChefProfile })(SignUp);\n"]},"metadata":{},"sourceType":"module"}