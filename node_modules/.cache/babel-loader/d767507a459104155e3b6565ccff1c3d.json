{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/CreatePost.js\";\n//create a form for a chef to make a new post\n// use axios.post request on form submit\n// route back to chef profile page on submit\nimport React from \"react\";\nimport Page from \"../pages/Page\";\nimport { connect } from \"react-redux\";\nimport { postNewRecipe, postNewChefProfile } from \"../actions/index\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nfunction CreatePost(props) {\n  //this is only for demonstration purposes- include axios post with this props.history.push\n  // const [recipes, setRecipes] = useState([]);\n  const userSchema = Yup.object().shape({\n    title: Yup.string().required(),\n    time: Yup.string().required(),\n    ingredients: Yup.string().required(),\n    instructions: Yup.string().required()\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Create Post\"), React.createElement(Formik, {\n    initialValues: {\n      title: \"\",\n      time: \"\",\n      ingredients: \"\",\n      instructions: \"\"\n    },\n    onSubmit: (values, tools) => {\n      tools.resetForm();\n      props.postNewRecipe(values); // axios\n      //   .post(\"https://reqres.in/api/users\", values)\n      //   .then(res => {\n      //     console.log(\"SUCCESSFUL\", res);\n      //     const recipeData = res.data;\n      //     setRecipes([...recipes, recipeData]);\n      //   })\n      //   .catch(err => {\n      //     console.log(\"FAILURE\", err);\n      //   });\n    },\n    validationSchema: userSchema,\n    render: props => {\n      return React.createElement(Form, {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Title:\", React.createElement(Field, {\n        name: \"title\",\n        type: \"text\",\n        placeholder: \"Squash and Feta Flatbread\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), props.errors.title && props.touched.title ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, props.errors.title) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Time to complete:\", React.createElement(Field, {\n        name: \"time\",\n        type: \"text\",\n        placeholder: \"Approximately 1 hour\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), props.errors.time && props.touched.time ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, props.errors.time) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Ingredients:\", React.createElement(Field, {\n        name: \"ingredients\",\n        as: \"textarea\",\n        placeholder: \"List of ingredients needed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), props.errors.ingredients && props.touched.ingredients ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, props.errors.ingredients) : \"\", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Instructions:\", React.createElement(Field, {\n        name: \"instructions\",\n        as: \"textarea\",\n        placeholder: \"List of instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), props.errors.instructions && props.touched.instructions ? React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, props.errors.instructions) : \"\", React.createElement(\"input\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postNewRecipe\n})(CreatePost);","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/CreatePost.js"],"names":["React","Page","connect","postNewRecipe","postNewChefProfile","Formik","Form","Field","Yup","CreatePost","props","userSchema","object","shape","title","string","required","time","ingredients","instructions","values","tools","resetForm","errors","touched","mapStateToProps","state","error"],"mappings":"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","sourcesContent":["//create a form for a chef to make a new post\n// use axios.post request on form submit\n// route back to chef profile page on submit\n\nimport React from \"react\";\nimport Page from \"../pages/Page\";\nimport { connect } from \"react-redux\";\nimport { postNewRecipe, postNewChefProfile } from \"../actions/index\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nfunction CreatePost(props) {\n  //this is only for demonstration purposes- include axios post with this props.history.push\n\n  // const [recipes, setRecipes] = useState([]);\n\n  const userSchema = Yup.object().shape({\n    title: Yup.string().required(),\n    time: Yup.string().required(),\n    ingredients: Yup.string().required(),\n    instructions: Yup.string().required()\n  });\n\n  return (\n    <>\n      <Page>\n        <h1>Create Post</h1>\n\n        <Formik\n          initialValues={{\n            title: \"\",\n            time: \"\",\n            ingredients: \"\",\n            instructions: \"\"\n          }}\n          onSubmit={(values, tools) => {\n            tools.resetForm();\n            props.postNewRecipe(values);\n            // axios\n            //   .post(\"https://reqres.in/api/users\", values)\n            //   .then(res => {\n            //     console.log(\"SUCCESSFUL\", res);\n\n            //     const recipeData = res.data;\n\n            //     setRecipes([...recipes, recipeData]);\n            //   })\n            //   .catch(err => {\n            //     console.log(\"FAILURE\", err);\n            //   });\n          }}\n          validationSchema={userSchema}\n          render={props => {\n            return (\n              <Form className=\"formContainer\">\n                <label>\n                  Title:\n                  <Field\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Squash and Feta Flatbread\"\n                  />\n                </label>\n                {props.errors.title && props.touched.title ? (\n                  <span className=\"red\">{props.errors.title}</span>\n                ) : (\n                  \"\"\n                )}\n\n                <label>\n                  Time to complete:\n                  <Field\n                    name=\"time\"\n                    type=\"text\"\n                    placeholder=\"Approximately 1 hour\"\n                  />\n                </label>\n                {props.errors.time && props.touched.time ? (\n                  <span className=\"red\">{props.errors.time}</span>\n                ) : (\n                  \"\"\n                )}\n\n                <label>\n                  Ingredients:\n                  <Field\n                    name=\"ingredients\"\n                    as=\"textarea\"\n                    placeholder=\"List of ingredients needed\"\n                  />\n                </label>\n                {props.errors.ingredients && props.touched.ingredients ? (\n                  <span className=\"red\">{props.errors.ingredients}</span>\n                ) : (\n                  \"\"\n                )}\n\n                <label>\n                  Instructions:\n                  <Field\n                    name=\"instructions\"\n                    as=\"textarea\"\n                    placeholder=\"List of instructions\"\n                  />\n                </label>\n                {props.errors.instructions && props.touched.instructions ? (\n                  <span className=\"red\">{props.errors.instructions}</span>\n                ) : (\n                  \"\"\n                )}\n\n                <input className=\"submitButton\" type=\"submit\" />\n              </Form>\n            );\n          }}\n        />\n      </Page>\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { postNewRecipe })(CreatePost);\n"]},"metadata":{},"sourceType":"module"}