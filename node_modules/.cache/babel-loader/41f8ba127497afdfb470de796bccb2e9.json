{"ast":null,"code":"import _slicedToArray from \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/Recipes.js\";\n//map over array of recipes and render a RecipeCard component for each here.\n// thinking here, we should make this reusable so that the Recipes can be displayed on a chef's profile (just his/her recipes) and on the Guest Homepage (all recipes in database)\nimport React, { useState, useEffect } from \"react\";\nimport RecipeCard from \"./RecipeCard\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\n\nfunction Recipes() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"https://chef-2.herokuapp.com/api/recipes\").then(res => {\n      console.log(res);\n      setRecipes(res.data);\n    });\n  }, []); //Search state and input field state\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputText = _useState4[0],\n        setInputText = _useState4[1];\n\n  const _useState5 = useState(recipes),\n        _useState6 = _slicedToArray(_useState5, 2),\n        searchResults = _useState6[0],\n        setSearchResults = _useState6[1]; //loading state\n\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setSearchResults(recipes.filter(recipe => {\n        // return recipe.recipe_name.toLowerCase().includes(inputText.toLowerCase())\n        if (recipe.recipe_name.toLowerCase().includes(inputText.toLowerCase()) || recipe.chef_name.toLowerCase().includes(inputText.toLowerCase())) {\n          return recipe;\n        }\n      }));\n      setLoading(false);\n    }, 300);\n  }, [inputText, recipes]);\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n    console.log(inputText);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"searchBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"searchFormDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"EXPLORE MORE! Search by Chef, Ingredient, Recipe, Type and More!\")), React.createElement(\"form\", {\n    className: \"searchForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: inputText,\n    onChange: handleChange,\n    name: \"search\",\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))), loading || !searchResults.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    type: \"TailSpin\",\n    color: \"#07FE20\",\n    height: 50,\n    width: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Nothing to display...\")) : searchResults.map(recipe => {\n    return React.createElement(RecipeCard, {\n      key: recipe.id,\n      id: recipe.id,\n      chefName: recipe.chef_name,\n      title: recipe.recipe_name,\n      photo: recipe.recipe_photo,\n      cook_time: recipe.cook_time,\n      user_id: recipe.user_id,\n      setRecipes: setRecipes,\n      recipes: recipes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  }));\n}\n\nexport default Recipes;","map":{"version":3,"sources":["/Users/anna/Lambda/3. Web Applications II/4. Build/Chef-Portfolio-8-React-App/chef-portfolio-app/src/components/Recipes.js"],"names":["React","useState","useEffect","RecipeCard","axios","Loader","Recipes","recipes","setRecipes","get","then","res","console","log","data","inputText","setInputText","searchResults","setSearchResults","loading","setLoading","setTimeout","filter","recipe","recipe_name","toLowerCase","includes","chef_name","handleChange","e","target","value","length","map","id","recipe_photo","cook_time","user_id"],"mappings":"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","sourcesContent":["//map over array of recipes and render a RecipeCard component for each here.\n// thinking here, we should make this reusable so that the Recipes can be displayed on a chef's profile (just his/her recipes) and on the Guest Homepage (all recipes in database)\n\nimport React, { useState, useEffect } from \"react\";\nimport RecipeCard from \"./RecipeCard\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\n\nfunction Recipes() {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"https://chef-2.herokuapp.com/api/recipes\").then(res => {\n      console.log(res);\n      setRecipes(res.data);\n    });\n  }, []);\n\n  //Search state and input field state\n\n  const [inputText, setInputText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState(recipes);\n\n  //loading state\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setSearchResults(\n        recipes.filter(recipe => {\n          // return recipe.recipe_name.toLowerCase().includes(inputText.toLowerCase())\n          if (\n            recipe.recipe_name\n              .toLowerCase()\n              .includes(inputText.toLowerCase()) ||\n            recipe.chef_name.toLowerCase().includes(inputText.toLowerCase())\n          ) {\n            return recipe;\n          }\n        })\n      );\n      setLoading(false);\n    }, 300);\n  }, [inputText, recipes]);\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n    console.log(inputText);\n  };\n\n  return (\n    <>\n      <div className=\"searchBar\">\n        <div className=\"searchFormDesc\">\n          <p>\n            EXPLORE MORE! Search by Chef, Ingredient, Recipe, Type and More!\n          </p>\n        </div>\n\n        <form className=\"searchForm\">\n          <label>\n            <input\n              type=\"text\"\n              value={inputText}\n              onChange={handleChange}\n              name=\"search\"\n              placeholder=\"Search\"\n            />\n          </label>\n        </form>\n      </div>\n\n      {loading || !searchResults.length ? (\n        <div>\n          <Loader type=\"TailSpin\" color=\"#07FE20\" height={50} width={50} />\n          <p>Nothing to display...</p>\n        </div>\n      ) : (\n        searchResults.map(recipe => {\n          return (\n            <RecipeCard\n              key={recipe.id}\n              id={recipe.id}\n              chefName={recipe.chef_name}\n              title={recipe.recipe_name}\n              photo={recipe.recipe_photo}\n              cook_time={recipe.cook_time}\n              user_id={recipe.user_id}\n              setRecipes={setRecipes}\n              recipes={recipes}\n            />\n          );\n        })\n      )}\n\n      {/* <button onClick={props.getRecipes}>Show Me Rick</button> */}\n      {/* {recipes.map(recipe => (\n        <RecipeCard\n          key={recipe.id}\n          chefName={recipe.chef_name}\n          title={recipe.recipe_name}\n          photo={recipe.recipe_photo}\n          // ingredients={recipe.recipe_ingredients}\n          // cookTime={recipe.cook_time}\n          // prepTime={recipe.prep_time}\n          // instructions={recipe.instructions}\n          // servings={recipe.servings}\n        />\n      ))} */}\n    </>\n  );\n}\n\nexport default Recipes;\n"]},"metadata":{},"sourceType":"module"}